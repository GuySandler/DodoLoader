var map = {
    title: "Viridescent",
    song: "env2",
    maker: "unfortxnate",
    spawn: [0, 0.5, 0],
    init: function() {
        a.p([-4.85972, 0.43028, -18.32972], [1.55, 0, 0], [11.04, 0.16, 4.46], "6.0", 0, 0, 0.6, false, false, false, false);
        a.p([4.19042, 0.36042, -29.44958], [1.56, 0, 0], [11.04, 0.16, 4.46], "6.0", 0, 0, 0.6, false, false, false, false);
        a.p([1.65, -11.3, -43.99], [1.56, 0, 0], [6.54, 0.68, 4.5], "6.0", 1.25, 0, 0.6, false, false, false, false);
        a.c([1.54007, -10.35993, -43.88993], "8fce00");
        a.p([4.20021, -11.29979, -94.34979], [1.56, 0, 0], [44.94, 0.68, 4.5], "6.0", 1.55, 0, 0.6, false, false, false, false);
        a.p([4.20035, -7.99965, -59.09965], [1.56, 0, 0], [21.4, 0.16, 7.44], "-1.0", 0, 0, 0.6, false, false, false, false);
        a.p([4.57, -8.84, -163.74], [0, 0, 0], [2.66, 2.48, 23.12], "6.0", 0, 0, 0.6, false, false, false, false);
        a.c([4.34007, -12.94993, -195.78993], "8fce00");
        a.p([0.75021, -7.17979, -59.05979], [0, 0, 0], [1.02, 2, 20.84], "6.0", 0, 0, 0.6, false, false, true, false);
        a.p([7.48028, -7.17972, -59.05972], [0, 0, 0], [1.02, 2, 20.84], "6.0", 0, 0, 0.6, false, false, true, false);
        a.s([1.36035, -14.58965, -209.35965], 14.62, "8fce00,0.5", 0, 0, 0.6, false, false);
        a.s([-3.87958, -14.58958, -215.36958], 14.62, "8fce00,0.5", 0, 0, 0.6, false, false);
        a.s([-9.41951, -14.58951, -217.19951], 14.62, "8fce00,0.5", 0, 0, 0.6, false, false);
        a.s([-15.36, -14.59, -217.2], 14.62, "8fce00,0.5", 0, 0, 0.6, false, false);
        a.s([-19.82993, -14.58993, -216.42993], 14.62, "8fce00,0.5", 0, 0, 0.6, false, false);
        a.s([-24.04986, -14.58986, -213.26986], 14.62, "8fce00,0.5", 0, 0, 0.6, false, false);
        a.s([-27.14979, -14.58979, -208.18979], 14.62, "8fce00,0.5", 0, 0, 0.6, false, false);
        a.s([3.68028, -14.58972, -203.78972], 14.62, "8fce00,0.5", 0, 0, 0.6, false, false);
        a.p([0.60035, 1.86035, -26.75965], [0, 0, 0.5], [3.44, 1.16, 1], "8fce00", 0, 0, 0.6, false, false, false, false);
        a.c([4.10042, 1.06042, -18.40958], "8fce00");
        a.c([4.17049, -7.259510000000001, -37.99951], "8fce00");
        a.c([1.76, -7.4, -52.51], "8fce00");
        a.p([4.20007, -9.85993, -188.22993], [1.56, 0, 0], [23.48, 0.68, 4.5], "8fce00", 0, 0, 0.6, false, false, false, false);
        a.c([6.24014, -7.39986, -52.50986], "8fce00");
        a.c([2.19021, -7.39979, -54.19979], "8fce00");
        a.c([6.33028, -7.39972, -55.79972], "8fce00");
        a.c([1.84035, -7.39965, -55.79965], "8fce00");
        a.c([3.26042, -7.39958, -54.19958], "8fce00");
        a.c([5.21049, -7.39951, -57.53951], "8fce00");
        a.c([1.86, -7.4, -59.2], "8fce00");
        a.c([6.32007, -7.39993, -59.19993], "8fce00");
        a.c([4.33014, -7.39986, -57.60986], "8fce00");
        a.c([3.00021, -7.39979, -61.08979], "8fce00");
        a.c([6.42028, -7.39972, -62.92972], "8fce00");
        a.c([1.90035, -7.39965, -62.92965], "8fce00");
        a.c([6.37042, -7.39958, -66.80958], "8fce00");
        a.c([1.96049, -7.39951, -67.02951], "8fce00");
        a.c([2.41, -7.4, -61], "8fce00");
        a.c([4.24007, -7.39993, -64.86993], "8fce00");
        a.c([5.12014, -7.39986, -64.86986], "8fce00");
        a.c([2.31021, -6.919790000000001, -203.26979], "8fce00");
        a.c([3.21028, -7.619720000000001, -210.61972], "8fce00");
        a.p([-1.00965, 2.60035, -26.71965], [0, 0, 0], [4.62, 1.14, 1], "8fce00", 0, 0, 0.6, false, false, false, false);
        a.p([0.60042, 3.48042, -26.75958], [0, 0, -0.59], [3.5, 1.18, 1], "8fce00", 0, 0, 0.6, false, false, false, false);
        a.c([0.52049, -8.76951, -215.65951], "8fce00");
        a.c([-3.36, -7.77, -212.74], "8fce00");
        a.c([-3.35993, -7.28993, -214.38993], "8fce00");
        a.c([-3.35986, -7.789860000000001, -219.28986], "8fce00");
        a.c([-3.35979, -7.55979, -217.75979], "8fce00");
        a.c([-8.93972, -7.59972, -218.70972], "8fce00");
        a.c([-13.93965, -7.32965, -214.46965], "8fce00");
        a.c([-13.42958, -7.1795800000000005, -216.99958], "8fce00");
        a.c([-17.72951, -7.43951, -218.54951], "8fce00");
        a.c([-21.89, -7.710000000000001, -211.7], "8fce00");
        a.c([0.57007, -7.0999300000000005, -208.23993], "8fce00");
        a.p([-0.09986, 0.34014, -5.65986], [1.56, 0, 0], [14.64, 0.16, 4.46], "6.0", 0, 0, 0.6, false, false, false, false);
        a.p([4.01021, -8.06979, -33.07979], [1.56, 0, 0], [11.04, 0.5, 4.46], "6.0", 0, 0, 0.6, false, false, false, false);
        a.p([4.36028, 0.34028, -37.46972], [1.56, 0, 0], [4.72, 0.16, 4.46], "6.0", 0, 0, 0.6, false, false, false, false);
        a.p([4.35035, -7.43965, -146.37965], [1.56, 0, 0], [11.04, 0.78, 4.46], "6.0", 0, 0, 0.6, false, false, false, false);
        a.e([4.22007, 0.94007, -40.21993]);
        a.e([-27.32986, -7.45986, -207.02986]);
    },
    post: function() {
        a.u('P0');
        a.u('P1');
        a.u('P2');
        a.u('C0');
        a.u('P5');
        a.u('C1');
        cc.set_monkey("scene.clearColor", new BABYLON.Color3.FromHexString("#b1ffce"));
        cc.set_monkey("player.scaling", new BABYLON.Vector3(1.0, 1.0, 1.0));
        cc.set_monkey("speed", 0.2);
        cc.set_monkey("steer", 0.03);
        cc.refresh();
    },
    section_id: 0,
    section_update: function() {
        let PZ = player.position.z;
        switch (this.section_id) {
            case 0:
                if (PZ < -0.8595100000000002) {
                    speed = default_speed * 0.5;
                    this.section_id += 1
                }
                break;
            case 1:
                if (PZ < -8.43951) {
                    speed = cc.get("speed", null);
                    this.section_id += 1
                }
                break;
            case 2:
                if (PZ < -8.53965) {
                    this.section_id += 1
                }
                break;
            case 3:
                a.mov('P0', 'x', 1.4);
                if (PZ < -12.87965) {
                    this.section_id += 1
                }
                break;
            case 4:
                if (PZ < -20.029510000000002) {
                    speed = default_speed * 0.9;
                    this.section_id += 1
                }
                break;
            case 5:
                a.mov('P1', 'x', 9999999999.0);
                if (PZ < -24.36951) {
                    speed = cc.get("speed", null);
                    this.section_id += 1
                }
                break;
            case 6:
                if (PZ < -36.49986) {
                    speed = default_speed * 1.1;
                    this.section_id += 1
                }
                break;
            case 7:
                a.mov('P2', 'x', 0.25);
                a.mov('C0', 'x', 0.25);
                if (PZ < -48.97986) {
                    speed = cc.get("speed", null);
                    this.section_id += 1
                }
                break;
            case 8:
                if (PZ < -49.779579999999996) {
                    speed = default_speed * 0.4;
                    steer = default_steer * 1.25;
                    this.section_id += 1
                }
                break;
            case 9:
                if (PZ < -66.83958) {
                    speed = cc.get("speed", null);
                    steer = cc.get("steer", null);
                    this.section_id += 1
                }
                break;
            case 10:
                if (PZ < -68.51971999999999) {
                    speed = default_speed * 1.1;
                    this.section_id += 1
                }
                break;
            case 11:
                if (PZ < -124.57972) {
                    speed = cc.get("speed", null);
                    this.section_id += 1
                }
                break;
            case 12:
                if (PZ < -125.78979) {
                    a.d(5.0, 7.0, 1.0);
                    this.section_id += 1
                }
                break;
            case 13:
                if (PZ < -130.18979) {
                    a.d(null, null, null);
                    this.section_id += 1
                }
                break;
            case 14:
                if (PZ < -131.47986) {
                    a.d(30.0, 0.1, 1.0);
                    this.section_id += 1
                }
                break;
            case 15:
                if (PZ < -135.87985999999998) {
                    a.d(null, null, null);
                    this.section_id += 1
                }
                break;
            case 16:
                if (PZ < -146.99951) {
                    a.d(1.0, 0.16, 1.0);
                    this.section_id += 1
                }
                break;
            case 17:
                a.rot('P5', 'z', 1.5);
                if (PZ < -181.17951) {
                    a.d(null, null, null);
                    this.section_id += 1
                }
                break;
            case 18:
                if (PZ < -184.49958) {
                    speed = default_speed * 0.025;
                    a.msg_set("Stay to the left or right ");
                    this.section_id += 1
                }
                break;
            case 19:
                if (PZ < -185.31958) {
                    speed = cc.get("speed", null);
                    a.msg_del();
                    this.section_id += 1
                }
                break;
            case 20:
                if (PZ < -191.30986000000001) {
                    this.section_id += 1
                }
                break;
            case 21:
                a.mov('C1', 'y', 1.0);
                if (PZ < -193.70986) {
                    this.section_id += 1
                }
                break;
            case 22:
                if (PZ < -195.43) {
                    speed = default_speed * 0.75;
                    this.section_id += 1
                }
                break;
            case 23:
                if (PZ < -231.63) {
                    speed = cc.get("speed", null);
                    this.section_id += 1
                }
                break;
        }
    },
    reset: function() {
        this.section_id = 0;
        a.re('P0', [-4.85972, 0.43028, -18.32972], [1.55, 0, 0], [11.04, 0.16, 4.46]);
        a.re('P1', [4.19042, 0.36042, -29.44958], [1.56, 0, 0], [11.04, 0.16, 4.46]);
        a.re('P2', [1.65, -11.3, -43.99], [1.56, 0, 0], [6.54, 0.68, 4.5]);
        a.re('C0', [1.54007, -10.35993, -43.88993], [0, 0, 0], [2, 2, 2]);
        a.re('P3', [4.20021, -11.29979, -94.34979], [1.56, 0, 0], [44.94, 0.68, 4.5]);
        a.re('P4', [4.20035, -7.99965, -59.09965], [1.56, 0, 0], [21.4, 0.16, 7.44]);
        a.re('P5', [4.57, -8.84, -163.74], [0, 0, 0], [2.66, 2.48, 23.12]);
        a.re('C1', [4.34007, -12.94993, -195.78993], [0, 0, 0], [2, 2, 2]);
        a.re('P6', [0.75021, -7.17979, -59.05979], [0, 0, 0], [1.02, 2, 20.84]);
        a.re('P7', [7.48028, -7.17972, -59.05972], [0, 0, 0], [1.02, 2, 20.84]);
        a.re('S0', [1.36035, -14.58965, -209.35965], [0, 0, 0], [14.62, 14.62, 14.62]);
        a.re('S1', [-3.87958, -14.58958, -215.36958], [0, 0, 0], [14.62, 14.62, 14.62]);
        a.re('S2', [-9.41951, -14.58951, -217.19951], [0, 0, 0], [14.62, 14.62, 14.62]);
        a.re('S3', [-15.36, -14.59, -217.2], [0, 0, 0], [14.62, 14.62, 14.62]);
        a.re('S4', [-19.82993, -14.58993, -216.42993], [0, 0, 0], [14.62, 14.62, 14.62]);
        a.re('S5', [-24.04986, -14.58986, -213.26986], [0, 0, 0], [14.62, 14.62, 14.62]);
        a.re('S6', [-27.14979, -14.58979, -208.18979], [0, 0, 0], [14.62, 14.62, 14.62]);
        a.re('S7', [3.68028, -14.58972, -203.78972], [0, 0, 0], [14.62, 14.62, 14.62]);
        a.re('P8', [0.60035, 1.86035, -26.75965], [0, 0, 0.5], [3.44, 1.16, 1]);
        a.re('C2', [4.10042, 1.06042, -18.40958], [0, 0, 0], [2, 2, 2]);
        a.re('C3', [4.17049, -7.259510000000001, -37.99951], [0, 0, 0], [2, 2, 2]);
        a.re('C4', [1.76, -7.4, -52.51], [0, 0, 0], [2, 2, 2]);
        a.re('P9', [4.20007, -9.85993, -188.22993], [1.56, 0, 0], [23.48, 0.68, 4.5]);
        a.re('C5', [6.24014, -7.39986, -52.50986], [0, 0, 0], [2, 2, 2]);
        a.re('C6', [2.19021, -7.39979, -54.19979], [0, 0, 0], [2, 2, 2]);
        a.re('C7', [6.33028, -7.39972, -55.79972], [0, 0, 0], [2, 2, 2]);
        a.re('C8', [1.84035, -7.39965, -55.79965], [0, 0, 0], [2, 2, 2]);
        a.re('C9', [3.26042, -7.39958, -54.19958], [0, 0, 0], [2, 2, 2]);
        a.re('C10', [5.21049, -7.39951, -57.53951], [0, 0, 0], [2, 2, 2]);
        a.re('C11', [1.86, -7.4, -59.2], [0, 0, 0], [2, 2, 2]);
        a.re('C12', [6.32007, -7.39993, -59.19993], [0, 0, 0], [2, 2, 2]);
        a.re('C13', [4.33014, -7.39986, -57.60986], [0, 0, 0], [2, 2, 2]);
        a.re('C14', [3.00021, -7.39979, -61.08979], [0, 0, 0], [2, 2, 2]);
        a.re('C15', [6.42028, -7.39972, -62.92972], [0, 0, 0], [2, 2, 2]);
        a.re('C16', [1.90035, -7.39965, -62.92965], [0, 0, 0], [2, 2, 2]);
        a.re('C17', [6.37042, -7.39958, -66.80958], [0, 0, 0], [2, 2, 2]);
        a.re('C18', [1.96049, -7.39951, -67.02951], [0, 0, 0], [2, 2, 2]);
        a.re('C19', [2.41, -7.4, -61], [0, 0, 0], [2, 2, 2]);
        a.re('C20', [4.24007, -7.39993, -64.86993], [0, 0, 0], [2, 2, 2]);
        a.re('C21', [5.12014, -7.39986, -64.86986], [0, 0, 0], [2, 2, 2]);
        a.re('C22', [2.31021, -6.919790000000001, -203.26979], [0, 0, 0], [2, 2, 2]);
        a.re('C23', [3.21028, -7.619720000000001, -210.61972], [0, 0, 0], [2, 2, 2]);
        a.re('P10', [-1.00965, 2.60035, -26.71965], [0, 0, 0], [4.62, 1.14, 1]);
        a.re('P11', [0.60042, 3.48042, -26.75958], [0, 0, -0.59], [3.5, 1.18, 1]);
        a.re('C24', [0.52049, -8.76951, -215.65951], [0, 0, 0], [2, 2, 2]);
        a.re('C25', [-3.36, -7.77, -212.74], [0, 0, 0], [2, 2, 2]);
        a.re('C26', [-3.35993, -7.28993, -214.38993], [0, 0, 0], [2, 2, 2]);
        a.re('C27', [-3.35986, -7.789860000000001, -219.28986], [0, 0, 0], [2, 2, 2]);
        a.re('C28', [-3.35979, -7.55979, -217.75979], [0, 0, 0], [2, 2, 2]);
        a.re('C29', [-8.93972, -7.59972, -218.70972], [0, 0, 0], [2, 2, 2]);
        a.re('C30', [-13.93965, -7.32965, -214.46965], [0, 0, 0], [2, 2, 2]);
        a.re('C31', [-13.42958, -7.1795800000000005, -216.99958], [0, 0, 0], [2, 2, 2]);
        a.re('C32', [-17.72951, -7.43951, -218.54951], [0, 0, 0], [2, 2, 2]);
        a.re('C33', [-21.89, -7.710000000000001, -211.7], [0, 0, 0], [2, 2, 2]);
        a.re('C34', [0.57007, -7.0999300000000005, -208.23993], [0, 0, 0], [2, 2, 2]);
        a.re('P12', [-0.09986, 0.34014, -5.65986], [1.56, 0, 0], [14.64, 0.16, 4.46]);
        a.re('P13', [4.01021, -8.06979, -33.07979], [1.56, 0, 0], [11.04, 0.5, 4.46]);
        a.re('P14', [4.36028, 0.34028, -37.46972], [1.56, 0, 0], [4.72, 0.16, 4.46]);
        a.re('P15', [4.35035, -7.43965, -146.37965], [1.56, 0, 0], [11.04, 0.78, 4.46]);
        a.re('E0', [4.22007, 0.94007, -40.21993], [0, 0, 0], [1, 1, 1]);
        a.re('E1', [-27.32986, -7.45986, -207.02986], [0, 0, 0], [1, 1, 1]);
    },
    physics_update: function() {},
    render_update: function() {}
}